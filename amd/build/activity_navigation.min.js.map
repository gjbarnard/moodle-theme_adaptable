{"version":3,"file":"activity_navigation.min.js","sources":["../src/activity_navigation.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Activity navigation main component.\n *\n * @module     theme_adaptable/core_course/activity_navigation\n * @class      theme_adaptable/core_course/activity_navigation\n * @copyright  2025 G J Barnard\n *               {@link https://moodle.org/user/profile.php?id=442195}\n *               {@link https://gjbarnard.co.uk}\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport ajax from 'core/ajax';\nimport {BaseComponent} from 'core/reactive';\nimport {getCurrentCourseEditor} from 'core_courseformat/courseeditor';\nimport log from 'core/log';\nimport Notification from 'core/notification';\nimport Templates from 'core/templates';\n\nexport default class Component extends BaseComponent {\n\n    static singleton = false;\n\n    /**\n     * Constructor hook.\n     */\n    create() {\n        // Optional component name for debugging.\n        this.name = 'theme_adaptable_activity_navigation';\n    }\n\n    /**\n     * Static method to create a component instance from the mustache template.\n     *\n     * @param {element|string} target the DOM main element or its ID\n     *\n     * @return {Component}\n     */\n    static init(target) {\n        if (this.singleton) {\n            log.debug(\"Adaptable activity navigation Inited\");\n        } else {\n            log.debug(\"Adaptable activity navigation Init\");\n            this.singleton = true;\n            return new this({\n                element: document.getElementById(target),\n                reactive: getCurrentCourseEditor(),\n            });\n        }\n    }\n\n    getWatchers() {\n        return [\n            {watch: `cm.completionstate:updated`, handler: this._completionstateUpdated },\n        ];\n    }\n\n    async _completionstateUpdated({element}) {\n        log.debug(\"Adaptable activity navigation _completionstateUpdated element: \" + JSON.stringify(element));\n\n        const request = {\n            methodname: 'theme_adaptable_activity_navigation',\n            args: {\n                moduleid: element.id\n            }\n        };\n\n        ajax.call([request])[0]\n            .then((jsoncontextstring) => {\n                log.debug(\"Adaptable activity navigation update: \" + jsoncontextstring);\n                if (jsoncontextstring !== \"\") {\n                    const context = JSON.parse(jsoncontextstring);\n                    Templates.renderForPromise('theme_adaptable/core_course/activity_navigation', context)\n                        .then(({ html, js }) => {\n                            Templates.replaceNodeContents('#adaptable-activity-navigation', html, js);\n                        })\n                        .catch(error => Notification.exception(error));\n                } else {\n                    Notification.addNotification({\n                        message: \"Adaptable activity navigation update navigation not generated.\",\n                        type: 'error',\n                    });\n                }\n            })\n            .catch(error => {\n                Notification.addNotification({\n                    message: error.message,\n                    type: 'error',\n                });\n            });\n    }\n}\n"],"names":["Component","BaseComponent","create","name","target","this","singleton","debug","element","document","getElementById","reactive","getWatchers","watch","handler","_completionstateUpdated","JSON","stringify","request","methodname","args","moduleid","id","call","then","jsoncontextstring","context","parse","renderForPromise","_ref2","html","js","replaceNodeContents","catch","error","Notification","exception","addNotification","message","type"],"mappings":"skBAgCqBA,kBAAkBC,wBAOnCC,cAESC,KAAO,kDAUJC,YACJC,KAAKC,8BAGDC,MAAM,2CACLD,WAAY,EACV,IAAID,KAAK,CACZG,QAASC,SAASC,eAAeN,QACjCO,UAAU,yDANVJ,MAAM,wCAWlBK,oBACW,CACH,CAACC,mCAAqCC,QAAST,KAAKU,kEAI9BP,QAACA,2BACvBD,MAAM,kEAAoES,KAAKC,UAAUT,gBAEvFU,QAAU,CACZC,WAAY,sCACZC,KAAM,CACFC,SAAUb,QAAQc,mBAIrBC,KAAK,CAACL,UAAU,GAChBM,MAAMC,oCACClB,MAAM,yCAA2CkB,mBAC3B,KAAtBA,kBAA0B,OACpBC,QAAUV,KAAKW,MAAMF,sCACjBG,iBAAiB,kDAAmDF,SACzEF,MAAKK,YAACC,KAAEA,KAAFC,GAAQA,6BACDC,oBAAoB,iCAAkCF,KAAMC,OAEzEE,OAAMC,OAASC,sBAAaC,UAAUF,oCAE9BG,gBAAgB,CACzBC,QAAS,iEACTC,KAAM,aAIjBN,OAAMC,8BACUG,gBAAgB,CACzBC,QAASJ,MAAMI,QACfC,KAAM,yEAlEH,0BAFFvC"}