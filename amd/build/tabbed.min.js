define("theme_adaptable/tabbed",["exports","jquery","core/log"],(function(_exports,_jquery,_log){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}
// @license    https://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later.
Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_log=_interopRequireDefault(_log);const tabbed=(currentpage,tabpersistencetime)=>{if("coursepage"==currentpage){var expiration,hasStorage="sessionStorage"in window&&window.sessionStorage,currentUrl=document.location.toString();if(hasStorage&&-1!=currentUrl.indexOf("course/view.php?id=")){var tabValues=JSON.parse(sessionStorage.getItem("tabValues"))||{},tabTimestamp=JSON.parse(sessionStorage.getItem("tabTimestamp")),$radiobuttons=(0,_jquery.default)("#coursetabcontainer :radio"),now=new Date;const setTimestamp=timestamp=>{var timeStampJSON=JSON.stringify(timestamp);_log.default.debug("Adaptable ES6 Tabbled: Setting timestamp to "+timeStampJSON),sessionStorage.setItem("tabTimestamp",timeStampJSON)};tabTimestamp&&((expiration=new Date(tabTimestamp)).setMinutes(expiration.getMinutes()+parseInt(tabpersistencetime)),now.getTime()>expiration.getTime()&&(_log.default.debug("Adaptable ES6 Tabbled: Expired"),sessionStorage.removeItem("tabValues"),tabValues={})),setTimestamp(now);var courseid=new URL(document.location).searchParams.get("id");$radiobuttons.on("change",(function(){$radiobuttons.each((function(){this.checked&&(tabValues[courseid]=this.id)})),sessionStorage.setItem("tabValues",JSON.stringify(tabValues))}));var tabhasbeenset=!1;_jquery.default.each(tabValues,(function(key,value){key==courseid&&((0,_jquery.default)("#"+value).prop("checked",!0),tabhasbeenset=!0)})),0==tabhasbeenset&&(0,_jquery.default)("input:radio[name=tabs]:first").attr("checked",!0),(0,_jquery.default)("label.coursetab").show()}}};_exports.init=(currentpage,tabpersistencetime)=>{_log.default.debug("Adaptable ES6 Tabbled init"),"loading"!==document.readyState?(_log.default.debug("Adaptable ES6 Tabbled init DOM content already loaded"),tabbed(currentpage,tabpersistencetime)):(_log.default.debug("Adaptable ES6 Tabbled init JS DOM content not loaded"),document.addEventListener("DOMContentLoaded",(function(){_log.default.debug("Adaptable ES6 Tabbled init JS DOM content loaded"),tabbed(currentpage,tabpersistencetime)})))}}));

//# sourceMappingURL=tabbed.min.js.map